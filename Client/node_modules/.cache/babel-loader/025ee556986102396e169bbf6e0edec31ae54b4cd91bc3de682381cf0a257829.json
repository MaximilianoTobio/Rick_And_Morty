{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maxx\\\\Desktop\\\\rick_and_morty\\\\src\\\\components\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport style from './SearchBar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchBar(_ref) {\n  _s();\n  let {\n    onSearch\n  } = _ref;\n  const [id, setId] = useState('');\n  const handleChange = event => {\n    const value = event.target.value;\n    if (value < 1 || value > 826) {\n      alert('Comienza por 1 y busca hasta el 826!');\n      event.target.value = '';\n      return;\n    }\n    setId(value);\n  };\n  const handleChangeRandom = () => {\n    return (Math.floor(Math.random() * 826) + 1).toString();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.search__container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.input__container,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleChange,\n          className: style.search__input,\n          placeholder: \"elije a tu personaje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            onSearch(id);\n          },\n          className: style.search__button,\n          children: \"Agregar!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          onSearch(handleChangeRandom());\n        },\n        className: style.random__button,\n        children: \"Random!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n}\n_s(SearchBar, \"HQhLVNjveXBilLE1Zdd8jTOIPME=\");\n_c = SearchBar;\n;\n\n/*\r\n      <div class=\"search__container\">\r\n<input class=\"search__input\" type=\"text\" placeholder=\"Search\">\r\n</div>\r\n<div class=\"credits__container\">\r\n</div>\r\n\n\n\n     return (\r\n <div>\r\n    <input type='text' onChange={handleChange}/>\r\n    <hr />\r\n    <button onClick={()=>{onSearch(id)}}>Agregar personajes</button>\r\n    <button onClick={()=>{\r\n       handleChangeRandom();\r\n       onSearch(random)}}\r\n    >Agrega un personaje aleatorio</button>\r\n </div>\r\n    );\r\n        const handleChangeRandom = () => {\r\n const valueRandom = Math.floor(Math.random() * 826)+1;\r\n setRandom(valueRandom.toString());\r\n};\r\nconst [random, setRandom] = useState((Math.floor(Math.random() * 826) + 1).toString());\r\n\n\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","style","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchBar","_ref","_s","onSearch","id","setId","handleChange","event","value","target","alert","handleChangeRandom","Math","floor","random","toString","children","className","search__container","input__container","type","onChange","search__input","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","search__button","random__button","_c","$RefreshReg$"],"sources":["C:/Users/Maxx/Desktop/rick_and_morty/src/components/SearchBar.jsx"],"sourcesContent":["import {useState} from 'react';\r\nimport style from './SearchBar.module.css';\r\n\r\nexport default function SearchBar({onSearch}) {\r\n\r\n   const [id, setId] = useState('');\r\n   \r\n   \r\n   const handleChange = (event) => {\r\n      const value = event.target.value;\r\n      if (value < 1 || value > 826) {\r\n        alert('Comienza por 1 y busca hasta el 826!');\r\n        event.target.value = '';\r\n         return;\r\n      }\r\n      setId(value);\r\n    };\r\n\r\n    const handleChangeRandom = () => {\r\n      return (Math.floor(Math.random() * 826) + 1).toString()\r\n    };\r\n    \r\n\r\n   return (\r\n      <>\r\n         <div className={style.search__container}>\r\n            <div className={style.input__container}>\r\n               <input type='text' onChange={handleChange} className={style.search__input} placeholder='elije a tu personaje'/>\r\n               <button onClick={()=>{onSearch(id)}} className={style.search__button}>Agregar!</button>\r\n            </div>\r\n            <button onClick={()=>{onSearch(handleChangeRandom())}} className={style.random__button}>\r\n               Random!\r\n            </button>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\n         \r\n     /*\r\n\r\n         <div class=\"search__container\">\r\n    <input class=\"search__input\" type=\"text\" placeholder=\"Search\">\r\n</div>\r\n\r\n<div class=\"credits__container\">\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n      <div>\r\n         <input type='text' onChange={handleChange}/>\r\n         <hr />\r\n         <button onClick={()=>{onSearch(id)}}>Agregar personajes</button>\r\n         <button onClick={()=>{\r\n            handleChangeRandom();\r\n            onSearch(random)}}\r\n         >Agrega un personaje aleatorio</button>\r\n      </div>\r\n         );\r\n             const handleChangeRandom = () => {\r\n      const valueRandom = Math.floor(Math.random() * 826)+1;\r\n      setRandom(valueRandom.toString());\r\n    };\r\n    const [random, setRandom] = useState((Math.floor(Math.random() * 826) + 1).toString());\r\n    \r\n     \r\n     \r\n     */\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,KAAK,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAEzC,MAAM,CAACG,EAAE,EAAEC,KAAK,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAGhC,MAAMY,YAAY,GAAIC,KAAK,IAAK;IAC7B,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChC,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,GAAG,EAAE;MAC5BE,KAAK,CAAC,sCAAsC,CAAC;MAC7CH,KAAK,CAACE,MAAM,CAACD,KAAK,GAAG,EAAE;MACtB;IACH;IACAH,KAAK,CAACG,KAAK,CAAC;EACd,CAAC;EAED,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,OAAO,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EAAEC,QAAQ,EAAE;EACzD,CAAC;EAGF,oBACGlB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACGnB,OAAA;MAAKoB,SAAS,EAAEtB,KAAK,CAACuB,iBAAkB;MAAAF,QAAA,gBACrCnB,OAAA;QAAKoB,SAAS,EAAEtB,KAAK,CAACwB,gBAAiB;QAAAH,QAAA,gBACpCnB,OAAA;UAAOuB,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAEf,YAAa;UAACW,SAAS,EAAEtB,KAAK,CAAC2B,aAAc;UAACC,WAAW,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAC/G9B,OAAA;UAAQ+B,OAAO,EAAEA,CAAA,KAAI;YAACzB,QAAQ,CAACC,EAAE,CAAC;UAAA,CAAE;UAACa,SAAS,EAAEtB,KAAK,CAACkC,cAAe;UAAAb,QAAA,EAAC;QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpF,eACN9B,OAAA;QAAQ+B,OAAO,EAAEA,CAAA,KAAI;UAACzB,QAAQ,CAACQ,kBAAkB,EAAE,CAAC;QAAA,CAAE;QAACM,SAAS,EAAEtB,KAAK,CAACmC,cAAe;QAAAd,QAAA,EAAC;MAExF;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACN,iBACN;AAET;AAACzB,EAAA,CAjCuBF,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAiChC;;AAGI;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BK,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}